setwd("~/Coursera/R/Getting_and_cleaning_data/q1")
load("~/Coursera/R/Getting_and_cleaning_data/q1/.RData")
library(XLConnect)
gas=readWorksheetFromFile("getdata-data-DATA.gov_NGAP.xlsx", sheet=1)
dat=gas
rm(gas)
gas=dat
dat=gas[18:23,7:15]
dat
gas[23,]
gas[22,]
sum(dat$Zip*dat$Ext,na.rm=T)
dat=gas[18:23,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
dat$Zip
names(gas)
dat=readWorksheetFromFile("getdata-data-DATA.gov_NGAP.xlsx", sheet=1, region="G18:O23", header=TRUE)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
rm(gas)
install.packages("XML")
library(XML)
res=xmlTreeParse("getdata-data-restaurants.xml")
head(res)
doc=xmlParse("getdata-data-restaurants.xml")
doc
xpathSApply(doc,"//li[class='zipcode'",xmlValue)
xpathSApply(doc,"//li[@class='zipcode'",xmlValue)
doc=xmlParse("getdata-data-restaurants.xml",useInternal=TRUE)
doc
xpathSApply(doc,"//li[@class='zipcode'",xmlValue)
xpathSApply(doc,"//class='zipcode'",xmlValue)
rootNode=xmlRoot(doc)
xpathSApply(rootNode,"//zipcode",xmlValue)
zips=xpathSApply(rootNode,"//zipcode",xmlValue)
zips==21231
table(zips)
sum(zips==21231)
DT=fread("getdata-data-ss06pid.csv")
install.packages("data.table")
library(data.table)
install.package("plyr")
install.packages("plyr")
library(data.table)
DT=fread("getdata-data-ss06pid.csv")
head(DT)
names(DT)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(a=1)
system.time(1)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
f <-function{mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}
f <-function(){mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}
system.time(f)
f
f()
system.time(f())
t=c(0)
t
t[1]=system.time(f())
rm(t)
t[1]=system.time(f())
class(system.time(f()))
system.time(f())
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
tapply(DT$pwgtp15,DT$SEX,mean)
ssytem.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
loopme <- function(g){for(i in 1:10000){g()}}
system.time(loopme(tapply(DT$pwgtp15,DT$SEX,mean)))
f2<-function(){tapply(DT$pwgtp15,DT$SEX,mean)}
f3=f2
f2<-function(){tapply(DT$pwgtp15,DT$SEX,mean)}
system.time(loopme(f2))
loopme <- function(g){for(i in 1:1000){g()}}
system.time(loopme(f2))
system.time(loopme(f3))
f4<-function(){sapply(split(DT$pwgtp15,DT$SEX),mean)}
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(loopme(f4))
f5<=function(){DT[,mean(pwgtp15),by=SEX]}
DT[,mean(pwgtp15),by=SEX]
f5<-function(){DT[,mean(pwgtp15),by=SEX]}
system.time(loopme(f5))
f6<-function(){rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]}
system.time(loopme(f6))
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT,na.rm=T)[DT$SEX==2]
rowMeans(DT,na.rm=T)[DT$SEX==1]; rowMeans(DT,na.rm=T)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time(loopme(f4))
f4
system.time(loopme(f))
system.time(loopme(f2))
system.time(loopme(f3))
system.time(loopme(f4))
system.time(loopme(f5))
system.time(loopme(f6))
